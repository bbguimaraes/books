(define (numer x) (car x))
(define (denom x) (cdr x))
(define (print-rat x)
  (display (numer x))
  (display "/")
  (display (denom x)))

(define (make-rat n d)
  (define (make n d)
    (let ((g (gcd n d)))
      (cons (/ n g) (/ d g))))
  (if (> d 0)
      (make n d)
      (make (- n) (- d))))

(print-rat (make-rat 1 2))
(newline)
(print-rat (make-rat -1 -2))
(newline)
(print-rat (make-rat -1 2))
(newline)
(print-rat (make-rat 1 -2))
(newline)
