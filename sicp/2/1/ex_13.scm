(define (mul-interval x y)
  (let ((p1 (* (lower-bound x) (lower-bound y)))
        (p2 (* (lower-bound x) (upper-bound y)))
        (p3 (* (upper-bound x) (lower-bound y)))
        (p4 (* (upper-bound x) (upper-bound y))))
    (make-interval (min p1 p2 p3 p4)
                   (max p1 p2 p3 p4))))

(define (make-interval a b) (cons a b))
(define (lower-bound x) (car x))
(define (upper-bound x) (cdr x))

(define (width i) (- (upper-bound i) (lower-bound i)))
(define (center i) (+ (lower-bound i) (/ (width i) 2)))
(define (percent i) (/ (/ (width i) 2) (center i)))

(define i1 (make-interval 9.5 10.5))
(define i2 (make-interval 1.8 2.2))
(define i3 (mul-interval i1 i2))

(display (percent i1))
(newline)
(display (percent i2))
(newline)
(display (+ (percent i1) (percent i2)))
(newline)
(display (percent i3))
(newline)
(display (- (percent i3) (+ (percent i1) (percent i2))))
(newline)
