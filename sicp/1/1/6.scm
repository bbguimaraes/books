(define (abs x)
  (cond ((> x 0) x)
        ((= x 0) 0)
        ((< x 0) (- x))))

(display (abs 1))
(newline)
(display (abs 0))
(newline)
(display (abs -1))
(newline)

(define (abs x)
  (cond ((< x 0) (- x))
        (else x)))

(newline)
(display (abs 1))
(newline)
(display (abs 0))
(newline)
(display (abs -1))
(newline)

(define (abs x)
  (if (< x 0)
    (- x)
    x))

(newline)
(display (abs 1))
(newline)
(display (abs 0))
(newline)
(display (abs -1))
(newline)

(newline)
(define x 7)
(display (and (> x 5) (< x 10)))
(newline)
(define x 42)
(display (and (> x 5) (< x 10)))
(newline)

(define (>= x y)
  (or (> x y) (= x y)))
(newline)
(display (>= 10 5))
(newline)
(display (>= 5 10))
(newline)

(define (>= x y)
  (not (< x y)))
(newline)
(display (>= 10 5))
(newline)
(display (>= 5 10))
(newline)
