(define (expmod base exp m)
  (cond ((= exp 0) 1)
        ((even? exp)
         (remainder (square (expmod base (/ exp 2) m))
                    m))
        (else
          (remainder (* base (expmod base (- exp 1) m))
                     m))))

(define (fermat-test n)
  (define (try-it a)
    (= (expmod a n n) a))
  (try-it (+ 1 (random (- n 1)))))

(define (test-charmichael n)
  (define (test-charmichael-iter i)
    (cond ((= i n) true)
          ((fermat-test n) (test-charmichael-iter (+ i 1)))
          (else false)))
  (test-charmichael-iter 0))

(display (test-charmichael 561))
(newline)
(display (test-charmichael 1105))
(newline)
(display (test-charmichael 1729))
(newline)
(display (test-charmichael 2465))
(newline)
(display (test-charmichael 2821))
(newline)
(display (test-charmichael 6601))
(newline)
